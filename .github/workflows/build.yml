name: build

on:
  pull_request:

env:
  # Currently no way to detect automatically (#8153)
  DEFAULT_BRANCH: main
  YARN_MODULES_CACHE_KEY: v1
  YARN_PACKAGE_CACHE_KEY: v1
  YARN_CACHE_FOLDER: .cache/yarn
  NODE_VERSION: 14
  DRY_RUN: true

jobs:
  test:
    runs-on: ${{ matrix.os }}

    # tests shouldn't need more time
    timeout-minutes: 30

    strategy:
      matrix:
        os: [windows-latest]
        node-version: [14]
        python-version: [3.9]
        java-version: [11]

    env:
      coverage: ${{ matrix.os == 'ubuntu-latest' && matrix.node-version == 14 }}
      NODE_VERSION: ${{ matrix.node-version }}
      PYTHON_VERSION: ${{ matrix.python-version }}
      JAVA_VERSION: ${{ matrix.java-version }}

    steps:
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Init platform
        shell: bash
        run: |
          git config --global core.autocrlf false
          git config --global core.symlinks true
          git config --global user.email 'renovate@whitesourcesoftware.com'
          git config --global user.name  'Renovate Bot'
          npm config set scripts-prepend-node-path true
          echo "Node $(node --version)"
          python --version
          echo "Yarn $(yarn --version)"

      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 2

      - name: Cache Yarn packages
        id: yarn_cache_packages
        uses: actions/cache@v2.1.6
        with:
          path: ${{ env.YARN_CACHE_FOLDER }}
          key: ${{ env.YARN_PACKAGE_CACHE_KEY }}-${{ runner.os }}-yarn_cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ env.YARN_PACKAGE_CACHE_KEY }}-${{ runner.os }}-yarn_cache-

      - name: Installing dependencies
        run: yarn install --frozen-lockfile

      - name: Unit tests
        run: yarn jest --maxWorkers=2 --ci --coverage false lib/manager/terraform
